{"version":3,"sources":["components/button.tsx","components/input.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","className","onClick","callback","name","InputField","countNumb","changeTitle","onKeyPressAddTask","style","width","borderRadius","height","fontSize","backgroundColor","color","textAlign","value","Main","firstNumber","defineNumber","actionNumber","actionEqual","clearAll","App","useState","setCountNumb","setFirstNumber","commit","setCommit","result","n","a","Number","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d703a3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype TypeButtonProps = {\r\n    name: string\r\n    callback: () => void\r\n    className?:string\r\n}\r\nexport const Button = (props: TypeButtonProps) => {\r\n    const onClickHandler = () => {\r\n        props.callback()\r\n    }\r\n    return (\r\n        <button className={props.className} onClick={onClickHandler}>{props.name}</button>\r\n    )\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    countNumb: string\r\n    changeTitle?: (event: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPressAddTask?: (event: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const InputField = ({countNumb, changeTitle, onKeyPressAddTask, ...props}: InputPropsType) => {\r\n\r\n    return (\r\n        <input\r\n            style={{width: '80%', borderRadius:'20px',\r\n                height:'50px', fontSize:'2rem',\r\n                backgroundColor:'black',color:'white',\r\n            textAlign:'right'}}\r\n            value={countNumb}\r\n\r\n        />\r\n\r\n    )\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Button} from \"./button\";\r\nimport {InputField} from \"./input\";\r\n\r\ntype TypeMainProps = {\r\n    countNumb: string\r\n    firstNumber: number\r\n    defineNumber: (n: string) => void\r\n    actionNumber: (a: string) => void\r\n    actionEqual: () => void\r\n    clearAll: () => void\r\n}\r\n\r\nexport const Main = (props: TypeMainProps) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <InputField countNumb={props.countNumb}/>\r\n            </div>\r\n            <div> {props.firstNumber !== 0 ? props.firstNumber : '___'} </div>\r\n            <div className={'buttons'}>\r\n                <Button className={'btn one'} name={'1'} callback={() => props.defineNumber('1')}/>\r\n                <Button className={'btn two'} name={'2'} callback={() => props.defineNumber('2')}/>\r\n                <Button className={'btn three'} name={'3'} callback={() => props.defineNumber('3')}/>\r\n                <Button className={'btn minus bg-orange'} name={'-'} callback={() => props.actionNumber('-')}/>\r\n            </div>\r\n            <div>\r\n                <Button className={'btn four'} name={'4'} callback={() => props.defineNumber('4')}/>\r\n                <Button className={'btn five'} name={'5'} callback={() => props.defineNumber('5')}/>\r\n                <Button className={'btn six'} name={'6'} callback={() => props.defineNumber('6')}/>\r\n                <Button className={'btn division bg-orange'} name={'/'} callback={() => props.actionNumber('/')}/>\r\n            </div>\r\n            <div>\r\n                <Button className={'btn seven'} name={'7'} callback={() => props.defineNumber('7')}/>\r\n                <Button className={'btn eight'} name={'8'} callback={() => props.defineNumber('8')}/>\r\n                <Button className={'btn nine'} name={'9'} callback={() => props.defineNumber('9')}/>\r\n                <Button className={'btn multiply bg-orange'} name={'*'} callback={() => props.actionNumber('*')}/>\r\n            </div>\r\n            <div>\r\n                <Button className={'btn zero'} name={'0'} callback={() => props.defineNumber('0')}/>\r\n                <Button className={'btn dot bg-grey'} name={'.'} callback={() => props.defineNumber('.')}/>\r\n                <Button className={'btn plus bg-orange'} name={'+'} callback={() => props.actionNumber('+')}/>\r\n                <Button className={'btn equal bg-orange'} name={'='} callback={props.actionEqual}/>\r\n            </div>\r\n            <div>\r\n                <Button className={'btn ac bg-grey'} name={'AC'} callback={props.clearAll}/>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Main} from \"./components/Main\";\n\nfunction App() {\n    const startCountNumb = ''\n    let currentNumb = startCountNumb\n    const [countNumb, setCountNumb] = useState(startCountNumb)\n    const defineNumber = (n: string) => {\n        currentNumb = countNumb + n\n        setCountNumb(currentNumb)\n    }\n    const [firstNumber, setFirstNumber] = useState(0)\n    const [commit, setCommit] = useState('')\n    const actionNumber = (a: string) => {\n        setFirstNumber(Number(countNumb))\n        setCountNumb('')\n        setCommit(a)\n    }\n\n    let result = 0\n    const actionEqual = () => {\n        if (commit === '+') {\n            result = firstNumber + Number(countNumb)\n        }\n        if (commit === '-') {\n            result = firstNumber - Number(countNumb)\n        }\n        if (commit === '/') {\n            result = firstNumber / Number(countNumb)\n        }\n        if (commit === '*') {\n            result = firstNumber * Number(countNumb)\n        }\n        setCountNumb(result.toString())\n        setFirstNumber(0)\n    }\n\n    const clearAll = () => {\n        setCountNumb('')\n        setCommit('')\n        setFirstNumber(0)\n    }\n\n\n    return (\n        <div className=\"App\">\n            <Main countNumb={countNumb}\n                  firstNumber={firstNumber}\n                  defineNumber={defineNumber}\n                  actionNumber={actionNumber}\n                  actionEqual={actionEqual}\n                  clearAll={clearAll}\n\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {StudySelector} from \"./Study-Selector\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n      {/*<StudySelector/>*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}